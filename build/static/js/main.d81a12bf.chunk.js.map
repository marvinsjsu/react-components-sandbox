{"version":3,"sources":["components/MainPage/index.js","components/MainAccountPage/index.js","components/Enable2FA/index.js","components/Disable2FA/index.js","components/PasswordUpdate/index.js","App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","display","onClick","bind","assertThisInitialized","successCB","console","log","setState","_this$props","login","getPasswordStrength","react_default","a","createElement","Redirect","to","className","style","flexDirection","justifyContent","alignItems","padding","dist","initialDisplayComponent","passwordResetRedirect","siteKey","Component","redirect","user","cookies","Cookies","accessToken","get","_this$state","id","Link","onClickDone","doneCB","cancelCB","onClickCancel","token","location","pathname","search","parsed","qs","parse","slice","withRouter","Switch","Route","exact","path","component","MainPage","MainAccountPage","Enable2FA","Disable2FA","PasswordUpdate","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d81a12bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Auth } from 'react-components';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'authenticator_disable',\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.successCB = this.successCB.bind(this);\n  }\n\n  onClick(display) {\n    console.log('display: ', display);\n    this.setState({\n      display: display\n    });\n  }\n\n  successCB() {\n    this.setState({\n      display: 'account'\n    });\n  }\n\n  render() {\n\n    const { display } = this.state;\n    const { login, getPasswordStrength } = this.props;\n\n    if (display === 'account') {\n      return (\n        <Redirect to='/account'/>\n      );\n    }\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 20\n        }}\n      >\n        <Auth\n          initialDisplayComponent={'login'}\n          passwordResetRedirect={'http://marvin.playground.s3-website-us-west-2.amazonaws.com/passwordReset'}\n          successCB={this.successCB}\n          siteKey={\"6LeteIMUAAAAAHs6I-qLFy01dt4LgW0hBWlicK5v\"}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport { Auth } from 'react-components';\nimport { Redirect, Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport '../../App.css';\n\nclass App extends Component {\n\n  state = {\n    redirect: false,\n    user: null,\n  }\n\n  componentDidMount() {\n\n    const cookies = new Cookies();\n    const accessToken = cookies.get('access_token');\n    const user = cookies.get('user');\n    const userId = cookies.get('user_id');\n\n    if (!accessToken) {\n      this.setState({\n        redirect: true,\n      });\n    } else {\n      this.setState({\n        user: user,\n      });\n    }\n  }\n\n  successCB = () => {\n    this.setState({\n      redirect: true,\n    });\n  }\n\n\n  render() {\n    const { redirect, user } = this.state;\n\n    if (redirect) {\n      return (\n        <Redirect to='/'/>\n      );\n    }\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 20\n        }}\n      >\n        <h4>Account Page - user id: {user && user.id}</h4>\n        <ul>\n          <li><Link to='/enable2fa'>Enable Authentication</Link></li>\n          <li><Link to='/disable2fa'>Disable Authentication</Link></li>\n          <li><Link to='/passwordUpdate'>Password Update</Link></li>\n        </ul>\n        <Auth\n          initialDisplayComponent={'logout'}\n          successCB={this.successCB}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport { Auth } from 'react-components';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'authenticator_disable',\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.successCB = this.successCB.bind(this);\n    this.onClickDone = this.onClickDone.bind(this);\n  }\n\n  onClick(display) {\n    console.log('display: ', display);\n    this.setState({\n      display: display\n    });\n  }\n\n  successCB() {\n    this.setState({\n      display: 'account'\n    });\n  }\n\n  onClickDone() {\n    this.setState({\n      display: 'account',\n    });\n  }\n\n  render() {\n\n    const { display } = this.state;\n    const { login, getPasswordStrength } = this.props;\n\n    if (display === 'account') {\n      return (\n        <Redirect to='/account'/>\n      );\n    }\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 20\n        }}\n      >\n\n        <Auth\n          initialDisplayComponent={'authenticator_setup'}\n          passwordResetRedirect={'http://marvin.playground.s3-website-us-west-2.amazonaws.com/passwordReset'}\n          successCB={this.successCB}\n          onClickDone={this.onClickDone}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport { Auth } from 'react-components';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'authenticator_disable',\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.successCB = this.successCB.bind(this);\n    this.doneCB = this.doneCB.bind(this);\n    this.cancelCB = this.cancelCB.bind(this);\n  }\n\n  onClick(display) {\n    console.log('display: ', display);\n    this.setState({\n      display: display\n    });\n  }\n\n  successCB() {\n    this.setState({\n      display: 'account'\n    });\n  }\n\n  doneCB() {\n    this.setState({\n      display: 'account',\n    });\n  }\n\n  cancelCB() {\n    this.setState({\n      display: 'account',\n    });\n  }\n\n  render() {\n\n    const { display } = this.state;\n    const { login, getPasswordStrength } = this.props;\n\n    if (display === 'account') {\n      return (\n        <Redirect to='/account'/>\n      );\n    }\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 20\n        }}\n      >\n\n        <Auth\n          initialDisplayComponent={'authenticator_disable'}\n          passwordResetRedirect={'http://marvin.playground.s3-website-us-west-2.amazonaws.com/passwordReset'}\n          successCB={this.successCB}\n          onClickDone={this.doneCB}\n          onClickCancel={this.cancelCB}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\nimport { Auth } from 'react-components';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport qs from 'qs';\nimport '../../App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 'authenticator_disable',\n      token: null,\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.successCB = this.successCB.bind(this);\n  }\n\n  componentDidMount() {\n\n    const { location } = this.props;\n\n    console.log('PasswordUpdate.componentDidMount.location: ', location);\n\n\n    if (location && location.pathname === '/passwordReset') {\n      if (location.search) {\n        console.log('componentDidMount.location: ', location);\n        const parsed = qs.parse(location.search.slice(1));\n\n        this.setState({\n          token: parsed.token\n        });\n      }\n    }\n  }\n\n  onClick(display) {\n    console.log('display: ', display);\n    this.setState({\n      display: display\n    });\n  }\n\n  successCB() {\n    this.setState({\n      display: 'account'\n    });\n  }\n\n  render() {\n\n    const { display } = this.state;\n    const { login, getPasswordStrength } = this.props;\n\n    if (display === 'account') {\n      return (\n        <Redirect to='/account'/>\n      );\n    }\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 20\n        }}\n      >\n\n        <Auth\n          initialDisplayComponent={'password_update'}\n          passwordResetRedirect={'http://marvin.playground.s3-website-us-west-2.amazonaws.com/passwordReset'}\n          token={this.state.token}\n          successCB={this.successCB}\n        />\n      </div>\n    );\n  }\n}\nexport default withRouter(App);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// import PrivateRoute from '../components/PrivateRoute/';\n\nimport MainPage from './components/MainPage';\nimport MainAccountPage from './components/MainAccountPage';\nimport Enable2FA from './components/Enable2FA';\nimport Disable2FA from './components/Disable2FA';\nimport PasswordUpdate from './components/PasswordUpdate';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"center w85\">\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/account\" component={MainAccountPage} />\n          <Route exact path=\"/enable2fa\" component={Enable2FA} />\n          <Route exact path=\"/disable2fa\" component={Disable2FA} />\n          <Route exact path=\"/passwordUpdate\" component={PasswordUpdate} />\n          <Route exact path=\"/passwordReset\" component={PasswordUpdate} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}