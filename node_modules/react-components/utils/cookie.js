import Cookies from 'universal-cookie';

export const Cookie = {
  saveUser: function (userData) {
    if (userData.access_token) {

      const cookies = new Cookies();


      if (userData.access_token) {
        cookies.remove('access_token');
        cookies.set('access_token', userData.access_token, { path: '/' })
      }

      if (userData.user) {
        cookies.remove('user');
        cookies.remove('user_id');
        cookies.set('user', JSON.stringify(userData.user), { path: '/' });
        cookies.set('user_id', userData.user.id, { path: '/' });
      }

      if (userData.expires_in) {
        cookies.remove('expires_in');
        cookies.set('expires_in', userData.expires_in, { path: '/' })
      }

      if (userData.token_type) {
        cookies.remove('token_type');
        cookies.set('token_type', userData.token_type, { path: '/' })
      }
    }
  },
  getUser: function () {
    const cookies = new Cookies();
    const user = cookies.get('user');

    if (user && user.email) {
      return user;
    }

    throw 'UserRetrievalFailed';
  },
  saveUserEmail: function (userEmail) {
    if (userEmail && userEmail.length > 0) {

      const cookies = new Cookies();
      cookies.remove('user_email');
      cookies.set('user_email', userEmail, { path: '/' });
    }
  },
  getUserEmail: function () {
    const cookies = new Cookies();
    const userEmail = cookies.get('user_email');

    if (userEmail && userEmail.length > 0) {
      return userEmail;
    }

    throw 'UserEmailNull';
  },
  getAccessToken: function () {

    const cookies = new Cookies();

    const accessToken = cookies.get('access_token');

    if (accessToken && accessToken.length > 0) {
      return accessToken;
    }

    throw 'AccessTokenNull';
  },
  saveTOTP: function (totp) {
    if (totp) {
      const cookies = new Cookies();
      cookies.remove('totp');
      cookies.set('totp', totp, { path: '/' })
    }
  },
  getTOTP: function () {
    const cookies = new Cookies();
    const totp = cookies.get('totp');

    if (totp && totp.length > 0) {
      return totp;
    }

    return false;
  },
  logout: function () {
    const cookies = new Cookies();

    cookies.remove('access_token');
    cookies.remove('user');
    cookies.remove('user_id');
    cookies.remove('expires_in');
    cookies.remove('token_type');
    cookies.remove('totp');
    cookies.remove('user_email');
  }
}