import React, { Component } from 'react';

import { Api } from '../../utils/api';
import { Password } from '../../utils/password';
import { Cookie } from '../../utils/cookie';

export const withAuth = (WrappedComponent) => {
  class HOC extends Component {

    constructor(props) {
      super(props);

      this.login = this.login.bind(this);
      this.getPasswordStrength = this.getPasswordStrength.bind(this);
      this.getPasswordMetCount = this.getPasswordMetCount.bind(this);
      this.getPasswordReqMet = this.getPasswordReqMet.bind(this);
      this.getPasswordReqUnmet = this.getPasswordReqUnmet.bind(this);
    }

    login({email, password}) {

      return Api.login({email, password})
        .then(response => {
          return response;
        });
    }

    register ({email, password, passwordConfirmation, redirect}) {

      return Api.register({email, password, passwordConfirmation, redirect})
        .then(response => {
          return response;
        });
    }

    getPasswordStrength(password) {

      return Password.getStrength(password);
    }

    getPasswordMetCount(password) {

      return Password.countRequirementsMet(password);
    }

    getPasswordReqMet(password) {

      return Password.getRequirementsMet(password);
    }

    getPasswordReqUnmet(password) {

      return Password.getRequirementsUnmet(password);
    }

    render() {
      return (
        <WrappedComponent
          login={this.login}
          getPasswordStrength={this.getPasswordStrength}
          getPasswordMetCount={this.getPasswordMetCount}
          getPasswordReqMet={this.getPasswordReqMet}
          getPasswordReqUnmet={this.getPasswordReqUnmet}
          {...this.props}
        />
      );
    }
  }

  return HOC;
}