import React, { Component } from 'react';
import { Link, Redirect } from 'react-router-dom';
import { SlideDown } from 'react-slidedown';
import 'react-slidedown/lib/slidedown.css';

import { Api } from '../../utils/api';
import { Cookie } from '../../utils/cookie';
import { styles } from '../../utils/styles';
import LoadingButton from '../LoadingButton';
import Container from '../Shared/Container';
import RememberMe from '../Shared/RememberMe';
import BottomLinks from '../Shared/BottomLinks';

export default class Login extends Component {

  constructor(props) {
    super(props);
    this.state = {
      email: '',
      password: '',
      loading: false,
      error: false,
      errorMessage: '',
      redirectToReferrer: false,
      remember_me: false,
    }

    this.updateEmail = this.updateEmail.bind(this);
    this.updatePassword = this.updatePassword.bind(this);
    this.onClick = this.onClick.bind(this);
  }

  updateEmail(event) {
    this.setState({
      email: event.target.value
    });
  }

  updatePassword(event) {
    this.setState({
      password: event.target.value
    });
  }

  onClick(event) {
    event.preventDefault();

    const { successCB, errorCB, displayComponent } = this.props;

    this.setState({
      loading: true,
      error: false,
      errorMessage: '',
    });

    Api.login(this.state)
      .then(response => {

        if (!response) {
          this.setState({
            error: true,
            errorMessage: 'Something went wrong.  Please try again.',
            loading: false,
          });
        }

        console.log("login response: ", response);
        if (response && response.error) {
          this.setState({
            error: true,
            errorMessage: response.message || 'Error in api call.',
            loading: false,
          });

          if (errorCB && typeof errorCB === 'function') {
            errorCB();
          }
        }

        if (response && response.status && response.status === 200 && response.data) {
          Cookie.saveUser(response.data);
          this.setState({
            redirectToReferrer: true
          });

          displayComponent('verification_code');

          if (successCB && typeof successCB === 'function') {
            successCB();
          }
        }
      });
  }

  render() {
    const { email, password, loading, error, errorMessage, redirectToReferrer, remember_me } = this.state;
    const { customStyles = {}, referrerPath, displayComponent } = this.props;
    const { containerStyle = {}, errorStyle = {}, formStyle = {}, labelContainerStyle = {}, labelStyle = {}, inputStyle = {}, buttonStyle = {}, linkStyle = {}} = customStyles;
    const contentTitle = 'Login to your account';

    if (redirectToReferrer && referrerPath) {
      return (
        <Redirect to={referrerPath} />
      );
    }

    return (
      <div>
        <Container
          contentTitle={contentTitle}
        >
          <form
            style={{
              ...styles.form,
              ...formStyle,
            }}
            autoComplete="off"
          >
            <SlideDown
              closed={!error}
            >
              <p
                style={{
                  ...styles.error,
                  ...errorStyle
                }}
              >
                { errorMessage }
              </p>
            </SlideDown>

            <div
              style={{
                ...styles.labelContainer,
                ...labelContainerStyle,
              }}
            >
              <label
                style={{
                  ...styles.label,
                  ...labelStyle
                }}
                htmlFor="email43"
              >
                *Email
              </label>
            </div>
            <input
              style={{
                ...styles.input,
                ...inputStyle,
              }}
              type="email"
              name="username"
              placeholder="Email address"
              value={email}
              onChange={this.updateEmail}
              required
            />
            <div
              style={{
                ...styles.labelContainer,
                ...labelContainerStyle,
              }}
            >
              <label
                style={{
                  ...styles.label,
                  ...labelStyle,
                }}
                htmlFor="password43"
              >
                *Password
              </label>
            </div>
            <input
              style={{
                ...styles.input,
                ...inputStyle,
              }}
              type="password"
              name="password"
              placeholder="Password"
              value={password}
              onChange={this.updatePassword}
              required
            />
            <a
              style={{
                ...styles.link,
                ...linkStyle,
              }}
              href="#"
              onClick={() => displayComponent('password_reset')}
            >
              Forgot your password?
            </a>

            <RememberMe />

            <div
              style={{
                ...styles.bottomLine
              }}
            >
              <span
                style={{
                  ...styles.statement
                }}
              >
                Don't have an account?
                <a
                  style={{
                    ...styles.link
                  }}
                  href="#"
                  onClick={() => displayComponent('sign_up')}
                >
                  {" "}Sign up.
                </a>
              </span>
              <button
                style={{
                  ...styles.button
                }}
                onClick={this.onClick}
              >
                Next
              </button>
            </div>
          </form>
        </Container>
        <BottomLinks />
      </div>
    );
  }
}

